name: AUR package update Workflow
on:
  push:
    branches:
      - master

jobs:
  update:
    name: "Update repository"
    runs-on: ubuntu-latest
    container:
      image: archlinux/archlinux:latest

    steps:
      - name: Store the SSH key
        run: |
          echo "${{ secrets.MY_SSH_KEY }}" | install -Dm600 /dev/stdin /root/.ssh/id_rsa

      - name: Get time for cache
        id: cache_time
        run: echo "::set-output name=time::$(date +%F-%T)"

      - name: Set up cache
        uses: actions/cache@master
        with:
          path: /var/cache/pacman/pkg
          key: pacman-cache-x86_64-${{ steps.cache_time.outputs.time }}
          restore-keys: pacman-cache-x86_64-

      - name: Install dependencies
        run: |
          pacman -Syu --needed --noconfirm && \
          pacman -S --needed --noconfirm git binutils pacman-contrib openssh rsync

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Update if necessary
        env:
          GIT_SSH_COMMAND: "ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
        run: |
          aurRepoDir=/tmp/tuterm
          githubRepoDir="${PWD}"
          buildDir="/tmp/build"

          aurCommitMessage="$(git log -1 --pretty=format:%B)"

          git config --global user.name ${{ secrets.MY_GIT_NAME }}
          git config --global user.email ${{ secrets.MY_GIT_EMAIL }}
          git clone ssh://aur@aur.archlinux.org/tuterm.git ${aurRepoDir}

          rsync --progress --delete -r --exclude={'*.gz','*.xz','.github','pkg','src','.git'} ${githubRepoDir}/ ${buildDir}/

          cd ${buildDir}

          useradd makepkg
          chown makepkg:root . -R

          su makepkg -c "updpkgsums"
          su makepkg -c "makepkg --printsrcinfo" > .SRCINFO

          rsync --progress --delete -r --exclude={'*.gz','*.xz','.github','pkg','src','.git'} ${buildDir}/ ${githubRepoDir}/
          rsync --progress --delete -r --exclude={'*.gz','*.xz','.github','pkg','src','.git'} ${buildDir}/ ${aurRepoDir}/

          cd ${aurRepoDir}

          git add .
          git diff --quiet --exit-code --cached || git commit -m "${aurCommitMessage}"
          git push origin master

          cd ${githubRepoDir}

          git add .
          git diff --quiet --exit-code --cached || git commit -m "Update .SRCINFO"
          git push origin master
